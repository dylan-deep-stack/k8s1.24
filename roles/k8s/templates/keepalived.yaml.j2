apiVersion: v1
kind: Pod
metadata:
  name: keepalived
  namespace: kube-system
  labels:
    app: keepalived
spec:
  containers:
    - name: keepalived
      image: registry.kubeoperator.io:8082/arcts/keepalived:1.2.2
      imagePullPolicy: IfNotPresent
      env:
      - name: KEEPALIVED_AUTOCONF
        value: "true"
      - name: KEEPALIVED_STATE
{% if inventory_hostname == groups['kube-master'][0] %}
        value: "MASTER"
{% else %}
        value: "BACKUP"
{% endif %}
      - name: KEEPALIVED_PRIORITY
        value: "{{ 120 - groups['kube-master'].index(inventory_hostname) }}"
      - name: KEEPALIVED_INTERFACE
        value: "{{ kube_interface }}"
      - name: KEEPALIVED_VIRTUAL_ROUTER_ID
        value: "86"
      - name: KEEPALIVED_UNICAST_SRC_IP
        value: "{{ hostvars[inventory_hostname]['ansible_ssh_host'] }}"
{% for h in groups['kube-master'] %}
{% if h != inventory_hostname %}
      - name: KEEPALIVED_UNICAST_PEER_{{ loop.index0 }}
        value: "{{ hostvars[h]['ansible_ssh_host'] }}"
{% endif %}
{% endfor %}
      - name: KEEPALIVED_VIRTUAL_IPADDRESS_1
        value: "{{ kube_vip }} dev {{ kube_interface }}"
      resources:
        requests:
          cpu: 0.1
          memory: 128Mi
      volumeMounts:
      - mountPath: /etc/localtime
        name: localtime
        readOnly: true
      securityContext:
        runAsUser: 0
        privileged: true
  hostNetwork: true
  priorityClassName: system-node-critical
  restartPolicy: Always
  volumes:
  - hostPath:
      path: /etc/localtime
      type: File
    name: localtime
